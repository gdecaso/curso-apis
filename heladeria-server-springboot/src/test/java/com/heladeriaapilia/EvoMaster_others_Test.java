package com.heladeriaapilia;


import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.controller.api.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import static org.evomaster.client.java.controller.db.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import  java.util.List;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;
import static org.evomaster.client.java.controller.expect.ExpectationHandler.expectationHandler;
import  org.evomaster.client.java.controller.expect.ExpectationHandler;
import  io.restassured.path.json.JsonPath;
import  java.util.Arrays;




/**
 * This file was automatically generated by EvoMaster on 2022-06-11T14:45:19.278-03:00[America/Argentina/Buenos_Aires]
 * <br>
 * The generated test suite contains 4 tests
 * <br>
 * Covered targets: 6
 * <br>
 * Used time: 0h 10m 2s
 * <br>
 * Needed budget for current results: 97%
 * <br>
 * This file contains test cases that represent failed calls, but not indicative of faults.
 */
public class EvoMaster_others_Test {

    
    private static String baseUrlOfSut = "http://localhost:8080";
    
    
    @BeforeAll
    public static void initClass() {
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    
    
    
    
    
    
    @Test
    public void test_0() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/guidodecaso/heladeria/1.0.0/gustos")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(9))
                .body("[0].'nombre'", containsString("Dulce de leche"))
                .body("[0].'tipo'", containsString("dulce de leches"))
                .body("[1].'nombre'", containsString("Dulce de leche granizado"))
                .body("[1].'tipo'", containsString("dulce de leches"))
                .body("[2].'nombre'", containsString("Chocolate amargo"))
                .body("[2].'tipo'", containsString("chocolates"))
                .body("[3].'nombre'", containsString("Chocolate con nuez"))
                .body("[3].'tipo'", containsString("chocolates"))
                .body("[4].'nombre'", containsString("Sambayón"))
                .body("[4].'tipo'", containsString("cremas"))
                .body("[5].'nombre'", containsString("Mascarpone"))
                .body("[5].'tipo'", containsString("cremas"))
                .body("[6].'nombre'", containsString("Frutilla al agua"))
                .body("[6].'tipo'", containsString("frutas"))
                .body("[7].'nombre'", containsString("Limón al agua"))
                .body("[7].'tipo'", containsString("frutas"))
                .body("[8].'nombre'", containsString("Naranja al agua"))
                .body("[8].'tipo'", containsString("frutas"));
        
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/guidodecaso/heladeria/1.0.0/pedidos/560/potes")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test
    public void test_1() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/guidodecaso/heladeria/1.0.0/pedidos/350/potes")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test
    public void test_2() throws Exception {
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/guidodecaso/heladeria/1.0.0/pedidos/297/potes/829")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test
    public void test_3() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/guidodecaso/heladeria/1.0.0/pedidos/623")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("*/*")
                .contentType("application/json")
                .body(" { " + 
                    " \"gustos\": [ " + 
                    " \"m9ivGcEOmf\" " + 
                    " ], " + 
                    " \"peso\": \"1000\" " + 
                    " } ")
                .post(baseUrlOfSut + "/guidodecaso/heladeria/1.0.0/pedidos/902/potes")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }


}
